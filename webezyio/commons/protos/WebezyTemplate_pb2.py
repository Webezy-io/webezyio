# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WebezyTemplate.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor

from typing import overload, Iterator, List, Dict
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14WebezyTemplate.proto\x12\x18webezy.WebezyTemplate.v1\"\x93\x01\n\x06\x43onfig\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08out_path\x18\x02 \x01(\t\x12\x0f\n\x07include\x18\x03 \x03(\t\x12\x0f\n\x07\x65xclude\x18\x04 \x03(\t\x12\x0c\n\x04tags\x18\x05 \x03(\t\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\x0e\n\x06\x61uthor\x18\x07 \x01(\t\x12\x14\n\x0cinclude_code\x18\x08 \x01(\x08\x62\x06proto3')



_CONFIG = DESCRIPTOR.message_types_by_name['Config']

@overload
class Config:
	"""webezyio generated message [webezy.WebezyTemplate.v1.Config]
	A class respresent a Config type
	"""
	name = str # type: str
	out_path = str # type: str
	include = List[str] # type: List[str]
	exclude = List[str] # type: List[str]
	tags = List[str] # type: List[str]
	description = str # type: str
	author = str # type: str
	include_code = bool # type: bool

	def __init__(self, name=str, out_path=str, include=List[str], exclude=List[str], tags=List[str], description=str, author=str, include_code=bool):
		pass
Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {
  'DESCRIPTOR' : _CONFIG,
  '__module__' : 'WebezyTemplate_pb2'
  # @@protoc_insertion_point(class_scope:webezy.WebezyTemplate.v1.Config)
  })
_sym_db.RegisterMessage(Config)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CONFIG._serialized_start=51
  _CONFIG._serialized_end=198
# @@protoc_insertion_point(module_scope)
